name: Test, please!

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Existing Version to release (*Blank to create a new one)'
        required: false
        default: '1.0.0'

permissions:
  contents: write

env:
  BOT_USER: Actions Bot
  BOT_MAIL: <>

jobs:
  Check:
    name: Check
    runs-on: ubuntu-latest
    outputs:
      CHECK: ${{ steps.check.outputs.CHECK }}
    steps:
      - name: Check Input Version
        id: checkver
        run: echo "check"
      - name: check
        id: check
        run: |
          if [ ${{ github.event.inputs.version }} = "1.0.0" ]; then
            echo "::set-output name=CHECK::RE-RELEASE"
            echo "ðŸ§¨ Re-Release of ${{ github.event.inputs.version }} version" >> $GITHUB_STEP_SUMMARY
          else
            echo "::set-output name=CHECK::NEW-RELEASE"
            echo "ðŸŽ‰ New-Release " >> $GITHUB_STEP_SUMMARY
          fi

  DryRunRelease:
    name: Dry-Run Release
    runs-on: ubuntu-latest
    needs: [Check]
    if: ${{ needs.Check.outputs.CHECK == 'NEW-RELEASE' }}
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
    steps:
      - name: Version
        id: version
        run: |
          nextversion="6.6.6"
          echo "::set-output name=VERSION::$nextversion"
          echo "Next version: $nextversion"
      - run: echo "âœ… Dry-Run next release $nextversion" >> $GITHUB_STEP_SUMMARY

  buildFE:
    needs: DryRunRelease
    name: FE Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - run: echo "Hello FE"
      - run: echo "âœ… Build & Push FE" >> $GITHUB_STEP_SUMMARY

  buildBE:
    needs: DryRunRelease
    name: BE Build
    runs-on: ubuntu-latest
    steps:
      - run: echo "Hello BE"
      - run: echo "âœ… Build & Push BE" >> $GITHUB_STEP_SUMMARY

  Deploy:
    needs: [Check, DryRunRelease, buildFE, buildBE]
    if: always()
    name: Deploy
    runs-on: ubuntu-latest
    outputs:
      IMAGETAG: ${{ steps.imagetag.outputs.IMAGETAG }}
    steps:
      - run: echo "deploy"
      - run: echo "âœ… Deploy" >> $GITHUB_STEP_SUMMARY

  RepoUpdate:
    needs: [DryRunRelease, Deploy]
    name: Repo Update
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - run: echo "update"
      - run: echo "âœ… Repo Update" >> $GITHUB_STEP_SUMMARY

  Release:
    needs: [RepoUpdate]
    name: Release
    runs-on: ubuntu-latest
    steps:
      - run: echo "semantic release"
      - run: echo "âœ… Sematic Release" >> $GITHUB_STEP_SUMMARY
